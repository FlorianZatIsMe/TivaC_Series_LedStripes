#include <stdio.h>
#include <stdint.h>

#include "GPIO.h"
#include "NVIC.h"
#include "SYSCTL.h"
//#include "UART.h"    // functions to implment input/output

//GENERAL DEFINES
//---------------
#define PRI_PWM0GEN0 						1																					// Priority or the interrupt generated by PWM0 Generator 0

#define RCC_PWMDIV_2 	0x0
#define RCC_PWMDIV_4 	0x1
#define RCC_PWMDIV_8 	0x2
#define RCC_PWMDIV_16 0x3
#define RCC_PWMDIV_32 0x4
#define RCC_PWMDIV_64	0x5

#define LOAD  		12				// Counter Load Value, see PWM0_PWM0LOAD_R

#define ENABLE_PWM 	{PWM0_PWMENABLE_R |=  0x01;}
#define ENABLE_MOTOR2 	{PWM0_PWMENABLE_R |=  0x02;}
#define DISABLE_PWM 	{PWM0_PWMENABLE_R &= ~0x01;}
#define DISABLE_MOTOR2 	{PWM0_PWMENABLE_R &= ~0x02;}

#define ENABLE_PWM0 	{PWM0_PWMENABLE_R |=  0x01;}
#define DISABLE_PWM0 	{PWM0_PWMENABLE_R &= ~(unsigned long)0x01;}

//PWM0 DEFINES - REGISTERS, Base address: 0x4002.8000
//---------------------------------------------------
#define PWM0_PWMCTL_R						(*((volatile unsigned long *)0x40028000)) //Offset 0x000 
#define PWM0_PWMSYNC_R					(*((volatile unsigned long *)0x40028004)) //Offset 0x004 
#define PWM0_PWMENABLE_R				(*((volatile unsigned long *)0x40028008)) //Offset 0x008 
#define PWM0_PWMINVERT_R				(*((volatile unsigned long *)0x4002800C)) //Offset 0x00C 
#define PWM0_PWMFAULT_R					(*((volatile unsigned long *)0x40028010)) //Offset 0x010 
#define PWM0_PWMINTEN_R					(*((volatile unsigned long *)0x40028014)) //Offset 0x014 
#define PWM0_PWMRIS_R						(*((volatile unsigned long *)0x40028018)) //Offset 0x018 
#define PWM0_PWMISC_R						(*((volatile unsigned long *)0x4002801C)) //Offset 0x01C 
#define PWM0_PWMSTATUS_R				(*((volatile unsigned long *)0x40028020)) //Offset 0x020 
#define PWM0_PWMFAULTVAL_R			(*((volatile unsigned long *)0x40028024)) //Offset 0x024 
#define PWM0_PWMENUPD_R					(*((volatile unsigned long *)0x40028028)) //Offset 0x028 
#define PWM0_PWM0CTL_R					(*((volatile unsigned long *)0x40028040)) //Offset 0x040 
#define PWM0_PWM0INTEN_R				(*((volatile unsigned long *)0x40028044)) //Offset 0x044 
#define PWM0_PWM0RIS_R					(*((volatile unsigned long *)0x40028048)) //Offset 0x048 
#define PWM0_PWM0ISC_R					(*((volatile unsigned long *)0x4002804C)) //Offset 0x04C 
#define PWM0_PWM0LOAD_R					(*((volatile unsigned long *)0x40028050)) //Offset 0x050 
#define PWM0_PWM0COUNT_R				(*((volatile unsigned long *)0x40028054)) //Offset 0x054 
#define PWM0_PWM0CMPA_R					(*((volatile unsigned long *)0x40028058)) //Offset 0x058 
#define PWM0_PWM0CMPB_R					(*((volatile unsigned long *)0x4002805C)) //Offset 0x05C 
#define PWM0_PWM0GENA_R					(*((volatile unsigned long *)0x40028060)) //Offset 0x060 
#define PWM0_PWM0GENB_R					(*((volatile unsigned long *)0x40028064)) //Offset 0x064 
#define PWM0_PWM0DBCTL_R				(*((volatile unsigned long *)0x40028068)) //Offset 0x068 
#define PWM0_PWM0DBRISE_R				(*((volatile unsigned long *)0x4002806C)) //Offset 0x06C 
#define PWM0_PWM0DBFALL_R				(*((volatile unsigned long *)0x40028070)) //Offset 0x070 
#define PWM0_PWM0FLTSRC0_R			(*((volatile unsigned long *)0x40028074)) //Offset 0x074 
#define PWM0_PWM0FLTSRC1_R			(*((volatile unsigned long *)0x40028078)) //Offset 0x078 
#define PWM0_PWM0MINFLTPER_R		(*((volatile unsigned long *)0x4002807C)) //Offset 0x07C 
#define PWM0_PWM1CTL_R					(*((volatile unsigned long *)0x40028080)) //Offset 0x080 
#define PWM0_PWM1INTEN_R				(*((volatile unsigned long *)0x40028084)) //Offset 0x084 
#define PWM0_PWM1RIS_R					(*((volatile unsigned long *)0x40028088)) //Offset 0x088 
#define PWM0_PWM1ISC_R					(*((volatile unsigned long *)0x4002808C)) //Offset 0x08C 
#define PWM0_PWM1LOAD_R					(*((volatile unsigned long *)0x40028090)) //Offset 0x090 
#define PWM0_PWM1COUNT_R				(*((volatile unsigned long *)0x40028094)) //Offset 0x094 
#define PWM0_PWM1CMPA_R					(*((volatile unsigned long *)0x40028098)) //Offset 0x098 
#define PWM0_PWM1CMPB_R					(*((volatile unsigned long *)0x4002809C)) //Offset 0x09C 
#define PWM0_PWM1GENA_R					(*((volatile unsigned long *)0x400280A0)) //Offset 0x0A0 
#define PWM0_PWM1GENB_R					(*((volatile unsigned long *)0x400280A4)) //Offset 0x0A4 
#define PWM0_PWM1DBCTL_R				(*((volatile unsigned long *)0x400280A8)) //Offset 0x0A8 
#define PWM0_PWM1DBRISE_R				(*((volatile unsigned long *)0x400280AC)) //Offset 0x0AC 
#define PWM0_PWM1DBFALL_R				(*((volatile unsigned long *)0x400280B0)) //Offset 0x0B0 
#define PWM0_PWM1FLTSRC0_R			(*((volatile unsigned long *)0x400280B4)) //Offset 0x0B4 
#define PWM0_PWM1FLTSRC1_R			(*((volatile unsigned long *)0x400280B8)) //Offset 0x0B8 
#define PWM0_PWM1MINFLTPER_R		(*((volatile unsigned long *)0x400280BC)) //Offset 0x0BC 
#define PWM0_PWM2CTL_R					(*((volatile unsigned long *)0x400280C0)) //Offset 0x0C0 
#define PWM0_PWM2INTEN_R				(*((volatile unsigned long *)0x400280C4)) //Offset 0x0C4 
#define PWM0_PWM2RIS_R					(*((volatile unsigned long *)0x400280C8)) //Offset 0x0C8 
#define PWM0_PWM2ISC_R					(*((volatile unsigned long *)0x400280CC)) //Offset 0x0CC 
#define PWM0_PWM2LOAD_R					(*((volatile unsigned long *)0x400280D0)) //Offset 0x0D0 
#define PWM0_PWM2COUNT_R				(*((volatile unsigned long *)0x400280D4)) //Offset 0x0D4 
#define PWM0_PWM2CMPA_R					(*((volatile unsigned long *)0x400280D8)) //Offset 0x0D8 
#define PWM0_PWM2CMPB_R					(*((volatile unsigned long *)0x400280DC)) //Offset 0x0DC 
#define PWM0_PWM2GENA_R					(*((volatile unsigned long *)0x400280E0)) //Offset 0x0E0 
#define PWM0_PWM2GENB_R					(*((volatile unsigned long *)0x400280E4)) //Offset 0x0E4 
#define PWM0_PWM2DBCTL_R				(*((volatile unsigned long *)0x400280E8)) //Offset 0x0E8 
#define PWM0_PWM2DBRISE_R				(*((volatile unsigned long *)0x400280EC)) //Offset 0x0EC 
#define PWM0_PWM2DBFALL_R				(*((volatile unsigned long *)0x400280F0)) //Offset 0x0F0 
#define PWM0_PWM2FLTSRC0_R			(*((volatile unsigned long *)0x400280F4)) //Offset 0x0F4 
#define PWM0_PWM2FLTSRC1_R			(*((volatile unsigned long *)0x400280F8)) //Offset 0x0F8 
#define PWM0_PWM2MINFLTPER_R		(*((volatile unsigned long *)0x400280FC)) //Offset 0x0FC 
#define PWM0_PWM3CTL_R					(*((volatile unsigned long *)0x40028100)) //Offset 0x100 
#define PWM0_PWM3INTEN_R				(*((volatile unsigned long *)0x40028104)) //Offset 0x104 
#define PWM0_PWM3RIS_R					(*((volatile unsigned long *)0x40028108)) //Offset 0x108 
#define PWM0_PWM3ISC_R					(*((volatile unsigned long *)0x4002810C)) //Offset 0x10C 
#define PWM0_PWM3LOAD_R					(*((volatile unsigned long *)0x40028110)) //Offset 0x110 
#define PWM0_PWM3COUNT_R				(*((volatile unsigned long *)0x40028114)) //Offset 0x114 
#define PWM0_PWM3CMPA_R					(*((volatile unsigned long *)0x40028118)) //Offset 0x118 
#define PWM0_PWM3CMPB_R					(*((volatile unsigned long *)0x4002811C)) //Offset 0x11C 
#define PWM0_PWM3GENA_R					(*((volatile unsigned long *)0x40028120)) //Offset 0x120 
#define PWM0_PWM3GENB_R					(*((volatile unsigned long *)0x40028124)) //Offset 0x124 
#define PWM0_PWM3DBCTL_R				(*((volatile unsigned long *)0x40028128)) //Offset 0x128 
#define PWM0_PWM3DBRISE_R				(*((volatile unsigned long *)0x4002812C)) //Offset 0x12C 
#define PWM0_PWM3DBFALL_R				(*((volatile unsigned long *)0x40028130)) //Offset 0x130 
#define PWM0_PWM3FLTSRC0_R			(*((volatile unsigned long *)0x40028134)) //Offset 0x134 
#define PWM0_PWM3FLTSRC1_R			(*((volatile unsigned long *)0x40028138)) //Offset 0x138 
#define PWM0_PWM3MINFLTPER_R		(*((volatile unsigned long *)0x4002813C)) //Offset 0x13C 
#define PWM0_PWM0FLTSEN_R				(*((volatile unsigned long *)0x40028800)) //Offset 0x800 
#define PWM0_PWM0FLTSTAT0_R			(*((volatile unsigned long *)0x40028804)) //Offset 0x804 
#define PWM0_PWM0FLTSTAT1_R			(*((volatile unsigned long *)0x40028808)) //Offset 0x808 
#define PWM0_PWM1FLTSEN_R				(*((volatile unsigned long *)0x40028880)) //Offset 0x880 
#define PWM0_PWM1FLTSTAT0_R			(*((volatile unsigned long *)0x40028884)) //Offset 0x884 
#define PWM0_PWM1FLTSTAT1_R			(*((volatile unsigned long *)0x40028888)) //Offset 0x888 
#define PWM0_PWM2FLTSTAT0_R			(*((volatile unsigned long *)0x40028904)) //Offset 0x904 
#define PWM0_PWM2FLTSTAT1_R			(*((volatile unsigned long *)0x40028908)) //Offset 0x908 
#define PWM0_PWM3FLTSTAT0_R			(*((volatile unsigned long *)0x40028984)) //Offset 0x984 
#define PWM0_PWM3FLTSTAT1_R			(*((volatile unsigned long *)0x40028988)) //Offset 0x988 
#define PWM0_PWMPP_R						(*((volatile unsigned long *)0x40028FC0)) //Offset 0xFC0 

/*
20.3.1
The clock source is selected by programming the USPWMDIV bit in the Run-Mode Clock
Configuration (RCC) register at System Control offset 0x060. The PWMDIV

20.3.8
A MnFAULTn pins may be individually programmed for the appropriate logic sense using the PWMnFLTSEN register


*/

//----------------------------
// Initialize the PWM0
// Pin used: PD2 (M0FAULT0), PB6 (M0PWM0), PB7 (M0PWM1)
// Input: none
// Output: none
void PWM0_Init(void);

//----------------------------
// Set the speed of the motor 1
// Update the value of PWM0_PWM0CMPA_R between
// Input: speed parameter between 0 and 0xFE
// Output: none
void motor1_setSpeed(unsigned long speed);

//----------------------------
// Set the speed of the motor 2
// Update the value of PWM0_PWM0CMPB_R between
// Input: speed parameter between 0 and 0xFE
// Output: none
void motor2_setSpeed(unsigned long speed);

//----------------------------
// Set the current bit to 1 or 0
// Update the value of PWM0_PWM0CMPA_R between
// Input: 1 or 0
// Output: none
void set_current_bit_status(unsigned long status_is_on);
